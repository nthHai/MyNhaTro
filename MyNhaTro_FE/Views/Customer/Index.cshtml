@model X.PagedList.IPagedList<CustomerModel>  //model List<CustomerModel>

@using X.PagedList.Mvc
@using X.PagedList.Mvc.Core

@{
    // Phương thức để hiển thị biểu tượng sắp xếp
    Func<string, string, string> GetSortIcon = (currentSort, sortField) =>
    {
        if (currentSort == sortField)
        {
            return "<i class='bi bi-caret-up-fill'></i>"; // Sắp xếp tăng
        }
        else if (currentSort == sortField + "_desc")
        {
            return "<i class='bi bi-caret-down-fill'></i>"; // Sắp xếp giảm
        }
        return ""; // Nếu không có sắp xếp
    };
}

<div class="container p-4 border">
    <div class="row pb-2">
       
        <div class=" col">
           <h1>Danh sách khách hàng</h1>
        </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <form method="get" action="@Url.Action("Index", "Customer")" class="d-flex">
                <input type="text" name="searchKeyword" class="form-control me-2" 
                       placeholder="Tìm kiếm theo mã, họ tên, số giấy tờ, điện thoại, nghề nghiệp" value="@ViewBag.CurrentFilter" />
                        <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i> Tìm kiếm</button>
            </form>
        </div>

    </div>
        <div class="col text-start p1-1">
                <a asp-controller="Customer" asp-action="Create" class="btn btn-success"><i class="bi bi-plus-square"></i>Thêm mới</a>
                <a asp-controller="Customer" asp-action="TestReport" class="btn btn-success"><i class="bi bi-plus-square"></i>In an</a>
        </div>
            
    </div>
        <div class="tbl-wrapper">
            <div class="tbl-header">
                <table>
                    <colgroup>
                        <col style="width: 120px;"> <!-- Cột Chức năng -->
                        <col style="width: 50px;"> <!-- Cột STT -->
                        <col style="width: 150px;"> <!-- Cột Mã khách hàng -->
                        <col style="width: 150px;"> <!-- Cột Họ -->
                        <col style="width: 150px;"> <!-- Cột Tên -->
                        <col style="width: 120px;"> <!-- Cột Ngày sinh -->
                        <col style="width: 200px;"> <!-- Cột Số CMND -->
                        <col style="width: 120px;"> <!-- Cột Số điện thoại -->
                        <col style="width: 250px;"> <!-- Cột Địa chỉ -->
                        <col style="width: 150px;"> <!-- Cột Nghề nghiệp -->
                        <col style="width: 200px;"> <!-- Cột Nơi làm việc -->
                        <col style="width: 150px;"> <!-- Cột Ngày tham gia -->
                        <col style="width: 300px;"> <!-- Cột Mô tả -->
                       
                    </colgroup>
                    <thead>
                        <tr>
                            <!--<th>@Html.DisplayNameFor(model => model.First().Id)</th> -->
                            <th style="text-align:right">Chức năng</th>
                            <th>STT</th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.CustomerCodeSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().CustomerCode)
                                    @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "CustomerCode"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.FirstNameSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().FirstName)
                                    @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "FirstName"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.LastNameSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().LastName)
                                    @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "LastName"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DayOfBirthSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().DayOfBirth)
                                @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "DayOfBirth"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.IdentifyNumberSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().IdentifyNumber)
                                @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "IdentifyNumber"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.MobilePhoneSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().MobilePhone)
                                @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "MobilePhone"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.PermanentAddressSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().PermanentAddress)
                                @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "PermanentAddress"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.JobNameSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().JobName)
                                @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "JobName"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.WorkPlaceSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().WorkPlace)
                                @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "WorkPlace"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateJoinSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().DateJoin)
                                @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "DateJoin"))
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DescriptionSortParm" asp-route-currentFilter="@ViewBag.CurrentFilter">
                                    @Html.DisplayNameFor(model => model.First().Description)
                                @Html.Raw(GetSortIcon(ViewBag.CurrentSort, "Description"))
                                </a>
                            </th>
                        </tr>
                
                    </thead>
                </table>
            </div>

            <div class="tbl-content">
                <table>
                    <colgroup>

                        <col style="width: 120px;"> <!-- Cột Chức năng -->
                        <col style="width: 50px;"> <!-- Cột STT -->
                        <col style="width: 150px;"> <!-- Cột Mã khách hàng -->
                        <col style="width: 150px;"> <!-- Cột Họ -->
                        <col style="width: 150px;"> <!-- Cột Tên -->
                        <col style="width: 120px;"> <!-- Cột Ngày sinh -->
                        <col style="width: 200px;"> <!-- Cột Số CMND -->
                        <col style="width: 120px;"> <!-- Cột Số điện thoại -->
                        <col style="width: 250px;"> <!-- Cột Địa chỉ -->
                        <col style="width: 150px;"> <!-- Cột Nghề nghiệp -->
                        <col style="width: 200px;"> <!-- Cột Nơi làm việc -->
                        <col style="width: 150px;"> <!-- Cột Ngày tham gia -->
                        <col style="width: 300px;"> <!-- Cột Mô tả -->
                        
                    </colgroup>
                    <tbody>
                        @{
                            int stt = 1; // Bắt đầu từ 1
                        }
                        @foreach (var item in Model)
                        {
                            <tr onclick="selectRow(this)">
                                <td class="text-end" style="text-align:center">
                                    <a asp-controller="Customer" asp-action="Details" asp-route-Id="@item.Id"
                                       class="btn btn-outline-success"><i class="bi bi-pencil-square"></i></a>
                                    <a asp-controller="Customer" asp-action="Delete" asp-route-Id="@item.Id"
                                       class="btn btn-outline-danger"><i class="bi bi-trash3"></i></a>
                                    <!--<a href="javascript:void(0)" onclick="editCustomer(@item.Id)">Sửa</a> | -->
                                    <!--<a href="/Customer/Delete/@item.Id">Xóa</a> -->
                                </td>

                                <td>@stt</td> <!-- Hiển thị STT -->
                                <!-- Ẩn giá trị ID trong một thẻ input hidden -->
                                <td style="display:none;">
                                    <input type="hidden" value="@item.Id" />
                                </td>

                                <!--<td>@item.Id</td> -->
                                <td>@item.CustomerCode</td>
                                <td>@item.FirstName</td>
                                <td>@item.LastName</td>
                                <td>@item.DayOfBirth</td>
                                <td>@item.IdentifyNumber</td>
                                <td>@item.MobilePhone</td>
                                <td>@item.PermanentAddress</td>
                                <td>@item.JobName</td>
                                <td>@item.WorkPlace</td>
                                <td>@item.DateJoin</td>
                                <td>@item.Description</td>
                            </tr>

                            stt++; // Tăng STT sau mỗi dòng
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div>
        @Html.PagedListPager(Model,
                 page => Url.Action("Index", "Customer", new 
                     {
                        page = page
                     }),
                 new PagedListRenderOptions
                    {
                        DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                        DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                        DisplayLinkToLastPage = PagedListDisplayMode.Always,
                        LinkToFirstPageFormat = "Đầu",
                        LinkToPreviousPageFormat = "Trước",
                        LinkToNextPageFormat = "Sau",
                        LinkToLastPageFormat = "Cuối",
                        MaximumPageNumbersToDisplay = 5,
                        Display = PagedListDisplayMode.IfNeeded,
                        UlElementClasses = new[] { "pagination", "pagination-lg" }, // Thêm lớp pagination-lg
                        LiElementClasses = new[] { "page-item" }, // Thêm lớp page-item cho <li>
                        PageClasses = new[] { "page-link" } // Thêm lớp page-link cho <a>
                    })
        </div>
   

    <script>
        $(window).on("load resize", function () {
            var scrollWidth = $('.tbl-content').width() - $('.tbl-content table').width();
            $('.tbl-header').css({ 'padding-right': scrollWidth });
        }).resize();

        function selectRow(row) {
            // Xóa lớp 'selected-row' khỏi tất cả các dòng khác
            document.querySelectorAll('.selected-row').forEach(function (el) {
                el.classList.remove('selected-row');
            });

            // Thêm lớp 'selected-row' vào dòng được chọn
            row.classList.add('selected-row');
        }
            
    </script>
</div>



