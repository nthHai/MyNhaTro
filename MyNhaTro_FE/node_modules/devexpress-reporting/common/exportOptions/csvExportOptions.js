/**
* DevExpress HTML/JS Reporting (common\exportOptions\csvExportOptions.js)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { csvExportOptionsSerializationInfo } from './csvMetaData';
export class CsvExportOptions {
    constructor(model, serializer) {
        this.defaultSeparatorValue = '';
        serializer = serializer || new ModelSerializer();
        serializer.deserialize(this, model);
        this.useCustomSeparator = ko.observable(this.separator && this.separator() !== this.defaultSeparatorValue);
        var separatorValue = ko.observable(this.separator());
        this.useCustomSeparator.subscribe((newValue) => {
            if (!newValue)
                separatorValue(this.defaultSeparatorValue);
        });
        this.separator = ko.computed({
            read: () => { return separatorValue(); },
            write: (newValue) => {
                separatorValue(newValue);
                if (this.useCustomSeparator)
                    this.useCustomSeparator(newValue !== this.defaultSeparatorValue);
            }
        });
    }
    static from(model, serializer) {
        return new CsvExportOptions(model || {}, serializer);
    }
    static toJson(value, serializer, refs) {
        return serializer.serialize(value, csvExportOptionsSerializationInfo, refs);
    }
    getInfo() {
        return csvExportOptionsSerializationInfo;
    }
    isPropertyDisabled(name) {
        return (name === 'separator') && !(this.useCustomSeparator && this.useCustomSeparator());
    }
}
