/**
* DevExpress HTML/JS Reporting (chart\components\series\_view.d.ts)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { SerializableModel } from '@devexpress/analytics-core/analytics-elements';
import { IModelSerializer, ISerializationInfo } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { FillStyle } from './_fillStyle';
import { Indicator } from './_indicator';
export declare class SeriesViewViewModel extends SerializableModel {
    static from(model: any, serializer?: IModelSerializer): ko.Observable<SeriesViewViewModel>;
    dispose(): void;
    static toJson(value: any, serializer: any, refs: any): any;
    _getInfo(typeName: string): ISerializationInfo[];
    private _createPropertyDisabledDependence;
    private _createMarkerDependences;
    private _createLinkOptionsDependences;
    preInitProperties(model: any): void;
    constructor(model: any, serializer?: IModelSerializer);
    axisXName: ko.Observable<string> | ko.Computed<string>;
    axisYName: ko.Observable<string> | ko.Computed<string>;
    paneName: ko.Observable<string> | ko.Computed<string>;
    fillStyle: FillStyle;
    indicators: ko.ObservableArray<Indicator>;
    barWidth: ko.Observable<number> | ko.Computed<number>;
    typeName: string;
}
export declare var view: ISerializationInfo;
