/**
* DevExpress HTML/JS Reporting (designer\internal\dragdrop\_fieldListDragDropHelper.d.ts)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/// <reference types="jquery" />
import { ElementViewModel, IElementViewModel, ISize, ISurfaceContext, Size } from '@devexpress/analytics-core/analytics-elements';
import { ISelectionTarget } from '@devexpress/analytics-core/analytics-internal';
import { TreeListItemViewModel } from '@devexpress/analytics-core/analytics-widgets-internal';
import { getUsefulReportWidth } from './_utils';
export declare class FieldListDragDropHelper {
    private _dataBindingMode;
    private _size?;
    constructor(_dataBindingMode: string, _size?: Size);
    private _createTable;
    private _getItemsFromList;
    private _getFirstLevelItems;
    createTableFromListSource(treeListItem: TreeListItemViewModel, parent: any): JQuery.Promise<IElementViewModel<string>, any, any>;
    createTableFromItems(treeListItems: TreeListItemViewModel[], parent: any): JQuery.Promise<IElementViewModel<string>, any, any>;
}
export declare var memberControlsMap: {
    Array: {
        drop: (treeListItem: TreeListItemViewModel, dropTargetControl: ElementViewModel, dataBindingMode: any) => any;
        size: (surface?: ISurfaceContext) => ISize;
    };
    Bool: {
        drop: (treeListItem: TreeListItemViewModel, dropTargetControl: ElementViewModel, dataBindingMode: any) => any;
        size: (surface?: ISurfaceContext) => ISize;
    };
    List: {
        drop: (treeListItem: TreeListItemViewModel, dropTargetControl: ElementViewModel, dataBindingMode: any, size?: Size) => JQueryPromise<IElementViewModel>;
        size: typeof getUsefulReportWidth;
        adjustDropTarget: (dropTarget: ISelectionTarget) => any;
    };
    MultiList: {
        drop: (treeListItem: TreeListItemViewModel, dropTargetControl: ElementViewModel, dataBindingMode: any, size?: Size) => JQueryPromise<IElementViewModel>;
        size: typeof getUsefulReportWidth;
        adjustDropTarget: (dropTarget: ISelectionTarget) => any;
    };
    Default: {
        drop: (treeListItem: TreeListItemViewModel, dropTargetControl: ElementViewModel, dataBindingMode: any) => any;
        size: (surface?: ISurfaceContext) => ISize;
    };
};
