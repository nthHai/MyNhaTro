/**
* DevExpress HTML/JS Reporting (designer\internal\dragdrop\_fieldListDragDropHandler.d.ts)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { DragDropHandler, DragHelperContent, IDataSourceInfo, SnapLinesHelper, SurfaceSelection } from '@devexpress/analytics-core/analytics-internal';
import { UndoEngine } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { ReportSurface } from '../../controls/xrReport';
import { IComponentAddedEventArgs } from '../../utils/inititalizer';
export declare class FieldListDragDropHandler extends DragDropHandler {
    private _canAddItems;
    private _undoEngine;
    private _dataSources;
    private _getKey;
    private _isIcon;
    private _setDragHelperContent;
    private _getDropTarget;
    private _needToChangeHelperContent;
    private _updateInnerControlSize;
    private _addControl;
    private _isDefaultBindingAssigned;
    canDrop(dropTarget: any, controlModel: any, metaData: any): boolean;
    constructor(_canAddItems: ko.Computed<boolean>, surface: ko.Observable<ReportSurface> | ko.Computed<ReportSurface>, selection: SurfaceSelection, _undoEngine: ko.Observable<UndoEngine> | ko.Computed<UndoEngine>, snapHelper: SnapLinesHelper, dragHelperContent: DragHelperContent, _dataSources: ko.ObservableArray<IDataSourceInfo>, onComponentAdded?: any);
    drag(event: MouseEvent, ui: HTMLElement, draggable: any): void;
    doStopDrag(uiElement: any, draggable: any, event: any): void;
    onComponentAdded: (e: IComponentAddedEventArgs) => void;
    dataBindingMode: ko.Computed<string>;
}
