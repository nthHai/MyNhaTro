/**
* DevExpress HTML/JS Reporting (designer\internal\dragdrop\_objectExplorerDragDropHelper.js)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ReorderTreeListDragDropHelper } from '@devexpress/analytics-core/analytics-widgets-internal';
import * as $ from 'jquery';
export class ObjectExplorerDragDropHelper extends ReorderTreeListDragDropHelper {
    constructor() {
        super(...arguments);
        this._orderingAreaHeight = 8;
    }
    _isInTopOrderArea(targetElement, mouseLocationY) {
        var targetTop = targetElement.offset().top;
        return mouseLocationY < (targetTop + this._orderingAreaHeight);
    }
    _isInBottomOrderArea(targetElement, mouseLocationY) {
        var targetTop = targetElement.offset().top;
        return mouseLocationY > (targetTop + targetElement.height() - this._orderingAreaHeight);
    }
    _getDroppableClassName(isInTopOrderArea, isInBottomOrderArea) {
        return this.droppableClassName;
    }
    _shouldCheckAreas() {
        return true;
    }
    setNewDropTarget(elementModel, element, mouseLocationY) {
        this.drag(elementModel, element);
        var $targetElement = $.fn.constructor(this._targetElement);
        if ($targetElement && $targetElement.length) {
            if (mouseLocationY && this._shouldCheckAreas()) {
                var isInTopOrderArea = this._isInTopOrderArea($targetElement, mouseLocationY);
                var isInBottomOrderArea = this._isInBottomOrderArea($targetElement, mouseLocationY);
            }
            $targetElement.addClass(this._getDroppableClassName(isInTopOrderArea, isInBottomOrderArea));
        }
    }
}
