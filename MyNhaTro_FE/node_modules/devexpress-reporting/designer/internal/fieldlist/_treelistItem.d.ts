/**
* DevExpress HTML/JS Reporting (designer\internal\fieldlist\_treelistItem.d.ts)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { CodeResolver } from '@devexpress/analytics-core/analytics-internal';
import { ITreeListOptions, TreeListItemViewModel } from '@devexpress/analytics-core/analytics-widgets-internal';
import { EnterKeyEvent, FocusOutEvent, InitializedEvent, KeyDownEvent } from 'devextreme/ui/text_box';
import * as ko from 'knockout';
export declare class ReportDesignerTreelistItem extends TreeListItemViewModel {
    protected resolver: CodeResolver;
    private _renameInProgress;
    constructor(options: ITreeListOptions, path: string[], onItemsVisibilityChanged: () => undefined, rtl: boolean, resolver: CodeResolver, _renameInProgress: ko.Observable<boolean>);
    get canRename(): boolean;
    get disabled(): boolean;
    get inRenameMode(): boolean;
    _renameMode: ko.Observable<boolean>;
    getCssRules(): {
        'dx-treelist-item-selected dxd-state-selected': boolean;
        'dx-treelist-item-disabled': boolean;
    };
    createValidatorOptions: () => {
        validationRules: {
            type: string;
            validationCallback: (options: any) => boolean;
            readonly message: any;
        }[];
    };
    createRenameEditorOptions: () => {
        onFocusOut: (event: FocusOutEvent) => void;
        onInitialized: (event: InitializedEvent) => void;
        onKeyUp: (event: KeyDownEvent) => void;
        onEnterKey: (event: EnterKeyEvent) => void;
        text: string;
    };
    renameMode(val: boolean): void;
    rename(val: string): void;
}
