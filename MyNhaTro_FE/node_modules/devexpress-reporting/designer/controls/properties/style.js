/**
* DevExpress HTML/JS Reporting (designer\controls\properties\style.js)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { PaddingModel } from '@devexpress/analytics-core/analytics-elements';
import { Disposable, getLocalization, ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { Locker } from '../../../common/utils/_locker';
import { styleSerializationInfo } from '../metadata/properties/style';
export class StyleModel extends Disposable {
    constructor(model, serializer) {
        super();
        this.className = () => {
            return 'stylemodel';
        };
        this.controlType = 'XRStyleModel';
        serializer = serializer || new ModelSerializer();
        serializer.deserialize(this, model);
        ['backColor', 'foreColor', 'borderColor'].forEach((propertyName) => {
            this._disposables.push(this[propertyName] = ko.pureComputed({
                read: () => { return this['_' + propertyName] && this['_' + propertyName](); },
                write: (val) => { this['_' + propertyName](val); }
            }));
        });
        this._disposables.push(this.paddingObj = new PaddingModel());
        this.paddingObj.applyFromString(this['padding']());
        var lock = new Locker().lock;
        this._disposables.push(this.padding.subscribe((newVal) => {
            lock(() => this.paddingObj.applyFromString(newVal));
        }));
        ['left', 'right', 'top', 'bottom'].forEach(name => {
            this._disposables.push(this.paddingObj[name].subscribe((newVal) => {
                lock(() => this.padding(this.paddingObj.toString()));
            }));
        });
    }
    getInfo() {
        return styleSerializationInfo;
    }
    isPropertyModified(name) {
        var needName = this['_' + name] ? '_' + name : name;
        var property = ko.unwrap(this[needName]);
        if (property instanceof Object) {
            return !property.isEmpty();
        }
        else {
            return !!property;
        }
    }
    displayType() {
        return getLocalization('Control Style', 'DevExpress.XtraReports.UI.XRControlStyle');
    }
}
StyleModel.unitProperties = ['paddingObj'];
