/**
* DevExpress HTML/JS Reporting (viewer\mobile\internal\_parametersPopup.js)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { getLocalization, Disposable } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { StringId, formatDate } from '@devexpress/analytics-core/analytics-internal';
export class ParametersPopupModelBase extends Disposable {
    constructor(formModel) {
        super();
        this.formModel = formModel;
        this._submit = (params) => {
            var result = params.validationGroup && params.validationGroup.validate && params.validationGroup.validate();
            if (!result || result.isValid) {
                this.formModel.submit && this.formModel.submit();
                this.visible(false);
            }
        };
        this._reset = () => {
            this.formModel.reset && this.formModel.reset();
        };
        this._cancel = () => {
            this.formModel.cancel && this.formModel.cancel();
            this.visible(false);
        };
        this.showIcons = ko.observable(false);
        this.className = '';
        this.visible = formModel.visible;
        this.cancelDisabled = ko.observable(false);
        this.actionButtons = [
            { className: 'dxrdp-parameters-reset', text: getLocalization('Reset', 'ASPxReportsStringId.ParametersPanel_Reset'), action: this._reset, disabled: false, visible: !!formModel.reset, id: 'dxrv-mobile-reset' },
            { className: 'dxrdp-parameters-cancel', text: getLocalization('Cancel', 'AnalyticsCoreStringId.SearchDialog_Cancel'), action: this._cancel, disabled: this.cancelDisabled, visible: true, id: 'dxrv-mobile-cancel' },
            { className: 'dxrdp-parameters-submit', text: getLocalization('Submit', 'ASPxReportsStringId.ParametersPanel_Submit'), action: this._submit, disabled: false, visible: true, id: 'dxrv-mobile-submit' }
        ];
        this.actionIcons = [
            { className: 'dxrdp-parameters-reset dxrdp-image-parameters-reset', action: this._reset, disabled: false, visible: !!formModel.reset },
            { className: 'dxrdp-parameters-cancel dxrdp-image-parameters-cancel', action: this._cancel, disabled: this.cancelDisabled, visible: true },
            { className: 'dxrdp-parameters-submit dxrdp-image-parameters-submit', action: this._submit, disabled: false, visible: true }
        ];
    }
    cacheElementContent(element) {
        this._parametersButtonContaner = element;
        this.initVisibilityIcons();
    }
    dispose() {
        super.dispose();
        this._parametersButtonContaner = null;
    }
    initVisibilityIcons() {
        if (!this._parametersButtonContaner)
            return;
        var result = this.showIcons();
        var nodeTop = this._parametersButtonContaner.offset().top;
        this._parametersButtonContaner.find('.dxrdp-parameter-action').each((_, el) => {
            result = nodeTop !== el.getBoundingClientRect().top;
        });
        this.showIcons(result);
    }
}
export class ParametersPopupModel extends ParametersPopupModelBase {
    constructor(model, _reportPreview) {
        super({ visible: model.popupInfo.visible, submit: model.submit, reset: model.restore });
        this.model = model;
        this._reportPreview = _reportPreview;
        this._disposables.push(ko.computed(() => {
            this.cancelDisabled(!this._reportPreview._currentDocumentId() || this._reportPreview.pages().length === 0);
        }));
        this.contentTemplate = 'dxrv-preview-parameters-mobile-content';
        this.title = getLocalization('Parameters', 'DevExpress.XtraReports.UI.XtraReport.Parameters');
    }
}
export class DateRangeParemeterPopupModel extends ParametersPopupModelBase {
    constructor(model) {
        super({
            visible: model._popupVisible, cancel: () => {
                this.model.startDate(this._oldStart);
                this.model.endDate(this._oldEnd);
                this.model.applyValue();
            }
        });
        this.model = model;
        this.getStringDate = (value) => formatDate(value);
        this.model.calendarHeight = undefined;
        var defaultButtonSettings = {
            stylingMode: 'contained',
            focusStateEnabled: false,
            activeStateEnabled: false
        };
        this.startButton = Object.assign({ text: ko.computed(() => this.model.startDate() && this.getStringDate(this.model.startDate()) || getLocalization('Start Date', 'AnalyticsCoreStringId.Mobile_DateRange_StartDate')), focused: ko.observable(false), onClick: () => {
                this.startButton.focused(true),
                    this.endButton.focused(false);
            } }, defaultButtonSettings);
        this.endButton = Object.assign({ text: ko.computed(() => this.model.endDate() && this.getStringDate(this.model.endDate()) || getLocalization('End Date', 'AnalyticsCoreStringId.Mobile_DateRange_EndDate')), focused: ko.observable(true), onClick: () => {
                this.endButton.focused(true),
                    this.startButton.focused(false);
            } }, defaultButtonSettings);
        this._disposables.push(this.endButton.text);
        this._disposables.push(this.startButton.text);
        var submitAction = this.actionButtons.filter(action => action.id == 'dxrv-mobile-submit')[0];
        if (submitAction)
            submitAction.text = getLocalization('OK', StringId.DataAccessBtnOK);
        this._disposables.push(this.textRangeValue = ko.computed({
            read: () => { return this.model._displayText(); },
            write: (val) => { this.model.applyDate(val.range(), true); }
        }));
        this._oldStart = this.model.startDate();
        this._oldEnd = this.model.endDate();
        this.title = getLocalization('Date Range Parameter', 'AnalyticsCoreStringId.Mobile_DateRange_Title');
        this.contentTemplate = 'dxrv-preview-date-range-mobile';
        this.className = 'dxrv-preview-date-range-mobile-popup';
    }
}
