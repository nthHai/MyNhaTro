/**
* DevExpress HTML/JS Reporting (viewer\internal\_previewModel.js)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { Disposable } from '@devexpress/analytics-core/analytics-utils';
export class PreviewDisposableModel extends Disposable {
    constructor(options) {
        super();
        this.rootStyle = options.rootStyle;
        this.reportPreview = options.reportPreview;
        this.parametersModel = options.parametersModel;
        this.exportModel = options.exportModel;
        this.searchModel = options.searchModel;
        this.rtl = options.rtl;
        this._disposables.push(options.reportPreview);
        this._disposables.push(options.parametersModel);
        this._disposables.push(options.exportModel);
        this._disposables.push(options.searchModel);
    }
    _addDisposable(object) {
        this._disposables.push(object);
    }
    dispose() {
        super.dispose();
        this.removeProperties();
    }
    GetParametersModel() {
        return this.parametersModel;
    }
    OpenReport(reportName) {
        this.reportPreview.openReport(reportName);
    }
    Print(pageIndex) {
        this.reportPreview.printDocument(pageIndex);
    }
    ExportTo(format, inlineResult) {
        if (!this.reportPreview.exportDisabled()) {
            this.reportPreview.exportDocumentTo(format || 'pdf', inlineResult);
        }
    }
    GetCurrentPageIndex() {
        return this.reportPreview.pageIndex();
    }
    GoToPage(pageIndex) {
        this.reportPreview.goToPage(pageIndex);
    }
    Close() {
        this.reportPreview.deactivate();
    }
    ResetParameters() {
        this.parametersModel && this.parametersModel.restore();
    }
    StartBuild() {
        this.parametersModel && this.parametersModel.submit();
    }
    PerformCustomDocumentOperation(customData, hideMessageFromUser) {
        return this.reportPreview.customDocumentOperation(customData, hideMessageFromUser);
    }
}
export class PreviewModel extends PreviewDisposableModel {
    constructor(options) {
        super(options);
        this.documentMapModel = options.documentMapModel;
        this.tabPanel = options.tabPanel;
        this.actionLists = options.actionLists;
        this.accessibilityCompliant = options.accessibilityCompliant;
        this._disposables.push(options.documentMapModel);
        this._disposables.push(options.tabPanel);
        this._disposables.push(options.actionLists);
    }
}
