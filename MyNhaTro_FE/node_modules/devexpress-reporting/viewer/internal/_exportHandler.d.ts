/**
* DevExpress HTML/JS Reporting (viewer\internal\_exportHandler.d.ts)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/// <reference types="jquery" />
import { Disposable } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { ReportPreview } from '../reportPreview';
import { IExportSettings } from '../utils/initializer';
import { IExportProgressStatus } from './_previewHandlersHelper';
export declare class ExportResultRequestData {
    RequestUrl: string;
    FormData: Object;
    QueryParameters: Object;
}
export declare class ExportHandler extends Disposable {
    private preview;
    exportActionUri: ko.Observable<string>;
    exportFormData: ko.Observable<any[]>;
    reportDisplayName: ko.Observable<string>;
    popupVisible: ko.Observable<boolean>;
    popupWidth: ko.Observable<number>;
    popupHeight: ko.Observable<number>;
    exportingFrame: HTMLIFrameElement;
    postingForm: HTMLFormElement;
    exportingFrameName: string;
    popupButtons: {
        toolbar: string;
        location: string;
        widget: string;
        options: {
            text: any;
            type: string;
            stylingMode: string;
            onClick: () => void;
        };
    }[];
    printingLinkCallback: () => void;
    printingTextPrefix: ko.Observable<string>;
    printingTextPostfix: ko.Observable<string>;
    getPopupTitle: () => string;
    onExportCustomEvent: (data: any) => void;
    private _exportResultRequestData;
    private _showPrintNotificationDialog;
    private _useSameTabExport;
    private _useAsynchronousExport;
    private _workerTicker;
    private _workerFunctionBlobUrl;
    private _xhr;
    private _workerTickerFunction;
    constructor(exportSetting: IExportSettings, preview: ReportPreview);
    private _getUrlObject;
    private _createWorker;
    private _terminateWorker;
    private _callPrint;
    private _window;
    private _clearExportingFrame;
    private _initPrintingWindow;
    private _setPrintingLinkCallback;
    private _formSubmit;
    private _doExportSync;
    private _initExportWindow;
    private _startExportAsync;
    export(args: () => string, actionUri: string, inlineResult?: boolean, printable?: boolean): JQuery.Promise<boolean>;
    private _isNewBrowser;
    private _showAsyncExportError;
    private _printUsingBlob;
    private _executeXhr;
    private _prepareXhr;
    private _handleXhrReady;
    private _addQueryParamsToUri;
    private _replaceLocation;
    private _timeouts;
    dispose(): void;
    updateExportStatus(progress: number, operationId: string): void;
    getExportStatus(operationId: string): JQueryPromise<IExportProgressStatus>;
    getExportResult(operationId: string, inlineDisposition: boolean, useSameTab: boolean, token?: string, printable?: boolean, uri?: string): void;
}
