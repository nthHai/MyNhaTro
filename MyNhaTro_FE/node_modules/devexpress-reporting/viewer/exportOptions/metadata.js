/**
* DevExpress HTML/JS Reporting (viewer\exportOptions\metadata.js)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { rtfExportMode, getExportModeValues, docxExportMode, htmlExportMode, xlsExportMode, imageExportMode, xlsxExportMode } from '../../common/exportOptions/metadata';
import * as ko from 'knockout';
import * as $ from 'jquery';
export var rtfExportModeMergedPreview = $.extend({}, rtfExportMode, {
    valuesArray: getExportModeValues('Rtf', true, true)
});
export var docxExportModeMergedPreview = $.extend({}, docxExportMode, {
    valuesArray: getExportModeValues('Docx', true, true)
});
export function excludeModesForMergedDocuments(val) {
    return ko.observable('SingleFilePageByPage');
}
export function excludeDifferentFilesMode(val) {
    return ko.observable(val === 'DifferentFiles' ? 'SingleFile' : val);
}
export var htmlExportModePreviewBase = {
    propertyName: htmlExportMode.propertyName, modelName: htmlExportMode.modelName, defaultVal: htmlExportMode.defaultVal,
    editor: htmlExportMode.editor, displayName: htmlExportMode.displayName, localizationId: htmlExportMode.localizationId
};
export var htmlExportModePreview = $.extend({}, htmlExportModePreviewBase, {
    from: excludeDifferentFilesMode,
    valuesArray: getExportModeValues('Html', true)
});
export var htmlExportModeMergedPreview = $.extend({}, htmlExportModePreviewBase, {
    valuesArray: getExportModeValues('Html', true, true)
});
export var xlsExportModePreviewBase = {
    propertyName: xlsExportMode.propertyName, modelName: xlsExportMode.modelName, defaultVal: xlsExportMode.defaultVal,
    editor: xlsExportMode.editor, displayName: xlsExportMode.displayName, localizationId: xlsExportMode.localizationId
};
export var xlsExportModePreview = $.extend({}, xlsExportModePreviewBase, {
    from: excludeDifferentFilesMode,
    valuesArray: getExportModeValues('Xls', true)
});
export var xlsExportModeMergedPreview = $.extend({}, xlsExportModePreviewBase, {
    valuesArray: getExportModeValues('Xls', true, true)
});
export var imageExportModePreviewBase = {
    propertyName: imageExportMode.propertyName, modelName: imageExportMode.modelName, defaultVal: imageExportMode.defaultVal,
    editor: imageExportMode.editor, displayName: imageExportMode.displayName, localizationId: imageExportMode.localizationId
};
export var imageExportModePreview = $.extend({}, imageExportModePreviewBase, {
    from: excludeDifferentFilesMode,
    valuesArray: getExportModeValues('Image', true)
});
export var imageExportModeMergedPreview = $.extend({}, imageExportModePreviewBase, {
    valuesArray: getExportModeValues('Image', true, true)
});
export var xlsxExportModePreviewBase = {
    propertyName: xlsxExportMode.propertyName, modelName: xlsxExportMode.modelName, defaultVal: xlsxExportMode.defaultVal,
    editor: xlsxExportMode.editor, displayName: xlsxExportMode.displayName, localizationId: xlsxExportMode.localizationId
};
export var xlsxExportModePreview = $.extend({}, xlsxExportModePreviewBase, {
    from: excludeDifferentFilesMode,
    valuesArray: getExportModeValues('Xlsx', true)
});
export var xlsxExportModeMergedPreview = $.extend({}, xlsxExportModePreviewBase, {
    valuesArray: getExportModeValues('Xlsx', true, true)
});
