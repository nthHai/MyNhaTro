/**
* DevExpress Analytics (accessibility\_accordionKeyboardHelper.js)
* Version:  22.2.14
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { AccessibilityKeyboardHelperBase } from './_keyboardHelperBase';
export class AccordionKeyboardHelper extends AccessibilityKeyboardHelperBase {
    constructor() {
        super(...arguments);
        this.controlElementClassName = 'dxrd-accessibility-accordion-trigger';
        this.focusFirstFocusableDescendant = true;
    }
    _getElementsCount() {
        return Array.prototype.slice.call(this.getContainer().querySelectorAll('.' + this.controlElementClassName)).length;
    }
    _defferedInit() {
        setTimeout(() => {
            if (this.controlElements.length !== this._getElementsCount()) {
                this.initialize();
            }
        }, 20);
    }
    _collapseItem(item) {
        var collapsed = ko.dataFor(item).collapsed;
        collapsed(!collapsed());
        this._defferedInit();
    }
    initialize() {
        super.initialize();
        this.setTabIndexes(0);
    }
    itemHandleUpArrowKey(e, index) {
        this.setFocusToPrevious(index);
        return true;
    }
    itemHandleDownArrowKey(e, index) {
        this.setFocusToNext(index);
        return true;
    }
    itemHandleEnterKey(e, index) {
        this._collapseItem(e.target);
        return true;
    }
    itemHandleSpaceKey(e, index) {
        this._collapseItem(e.target);
        return true;
    }
    clickHandler(e, index) {
        this._defferedInit();
        super.clickHandler(e, index);
    }
}
